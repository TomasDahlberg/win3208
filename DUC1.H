/*
!  file main_symTable.h generated from main.idc at Tue Jul 26 16:57:41 1994
!  by translator IDCC, version 1.65
*/
#define GT_diff (double) 10.0
#define MAX (double) 100.0
#define MIN (double) 0.0
#define NO_OF_CAL_ENTRIES 10
typedef struct {
  unsigned short day[NO_OF_CAL_ENTRIES];
  unsigned short stopday[NO_OF_CAL_ENTRIES];
  unsigned char  color[NO_OF_CAL_ENTRIES];
  unsigned short start[NO_OF_CAL_ENTRIES];
  unsigned short stop[NO_OF_CAL_ENTRIES];
} CALENDAR;
struct _remote {
  long timeStamp;
};
struct _datamodule {
    double Aq1_1;
    double Aq1_2;
    double Aq1_3;
    double Aq1_4;
    int    Auto;
    int    Day;
    int    Daycolor;
    int    Dq8_1;
    int    Dq8_2;
    int    Dq8_3;
    int    Dq8_4;
    int    Dq8_5;
    int    Dq8_6;
    int    Dq8_7;
    int    Dq8_8;
    double E101;
    int    E101_hand;
    double E101_man;
    double E101_ut;
    double E101_ut_konst;
    double E101_ut_off;
    int    FP1_auto;
    int    FP1_drifttill;
    int    FP1_drifttill_Auto;
    int    FP1_drifttill_hand;
    double FP1_effekt;
    int    FP1_larmkvitt;
    int    FP1_ned;
    int    FP1_till;
    int    FP1_till_Auto;
    int    FP1_till_hand;
    double G80GQ101;
    double G80GQ101_L;
    double G80GQ101_diff;
    int    G80GQ101_fel;
    double G80GQ101_filt;
    double G80GQ101_konst;
    double G80GQ101_offset;
    double G80GQ102;
    double G80GQ102_L;
    double G80GQ102_diff;
    int    G80GQ102_fel;
    double G80GQ102_filt;
    double G80GQ102_konst;
    double G80GQ102_offset;
    double G80GQ103;
    double G80GQ103_L;
    double G80GQ103_diff;
    int    G80GQ103_fel;
    double G80GQ103_filt;
    double G80GQ103_konst;
    double G80GQ103_offset;
    int    Hour;
    int    Kort_7;
    int    Manover_kraft;
    double Manover_kraft_R;
    int    Miljolarm;
    int    Minute;
    int    Month;
    int    STAT_fore;
    int    STAT_nytid;
    int    STAT_oldmonth;
    int    Second;
    int    Sleep;
    int    W36AV101_auto;
    int    W36AV101_closed;
    int    W36AV101_delay;
    int    W36AV101_hand;
    int    W36AV101_open;
    int    W36AV101_oppna;
    int    W36AV101_oppna_larm;
    int    W36AV101_sakr;
    int    W36AV101_stang;
    int    W36AV101_stang_larm;
    int    W36AV101_styr;
    double W36GE101;
    double W36GE101_L;
    double W36GE101_diff;
    int    W36GE101_fel;
    double W36GE101_filt;
    double W36GE101_konst;
    double W36GE101_offset;
    double W36GF101;
    double W36GF101_L;
    double W36GF101_diff;
    int    W36GF101_fel;
    double W36GF101_filt;
    double W36GF101_konst;
    double W36GF101_offset;
    double W36GT101A;
    double W36GT101A_L;
    double W36GT101A_diff;
    int    W36GT101A_fel;
    double W36GT101A_filt;
    double W36GT101A_konst;
    double W36GT101A_offset;
    double W36GT101B;
    double W36GT101B_L;
    double W36GT101B_diff;
    int    W36GT101B_fel;
    double W36GT101B_filt;
    double W36GT101B_konst;
    double W36GT101B_offset;
    double W36GW101_effekt;
    double W36GW101_foreg;
    double W36GW101_max;
    int    W36GW101_nytid;
    double W36GW101_pagar;
    int    W36GW101_puls;
    int    W36GW101_pulser;
    int    W36GW101_sek;
    double W36GW101_skal;
    double W36GW101_visa;
    double W51GE101;
    double W51GE101_L;
    double W51GE101_diff;
    int    W51GE101_fel;
    double W51GE101_filt;
    double W51GE101_konst;
    double W51GE101_offset;
    double W51GF101;
    double W51GF101_L;
    double W51GF101_diff;
    int    W51GF101_fel;
    double W51GF101_filt;
    double W51GF101_konst;
    double W51GF101_offset;
    double W51GP103;
    double W51GP103_L;
    double W51GP103_diff;
    int    W51GP103_fel;
    double W51GP103_filt;
    double W51GP103_konst;
    double W51GP103_offset;
    double W51GT101A;
    double W51GT101A_L;
    double W51GT101A_diff;
    int    W51GT101A_fel;
    double W51GT101A_filt;
    double W51GT101A_konst;
    double W51GT101A_offset;
    double W51GT101B;
    double W51GT101B_L;
    double W51GT101B_diff;
    int    W51GT101B_fel;
    double W51GT101B_filt;
    double W51GT101B_konst;
    double W51GT101B_offset;
    double W51GT105;
    double W51GT105_R;
    int    W51GT105_fel;
    double W51GT105_filt;
    double W51GT105_korr;
    double W51GT108;
    double W51GT108_R;
    int    W51GT108_fel;
    double W51GT108_filt;
    double W51GT108_korr;
    double W51GT109;
    double W51GT109_R;
    int    W51GT109_fel;
    double W51GT109_filt;
    double W51GT109_korr;
    double W51GW101_effekt;
    double W51GW101_foreg;
    double W51GW101_max;
    int    W51GW101_nytid;
    double W51GW101_pagar;
    int    W51GW101_puls;
    int    W51GW101_pulser;
    int    W51GW101_sek;
    double W51GW101_skal;
    double W51GW101_visa;
    double W51SV101;
    double W51SV101_L;
    int    W51SV101_auto;
    int    W51SV101_hand;
    double W51SV101_in;
    double W51SV101_in_diff;
    int    W51SV101_in_fel;
    double W51SV101_in_filt;
    double W51SV101_in_konst;
    double W51SV101_in_offset;
    double    W51SV101_inkurv[4];
    double W51SV101_man;
    int    W51SV101_sakr;
    double W51SV101_ut;
    double W51SV101_ut_off;
    double    W51SV101_utkurv[4];
    double W52GP101;
    double W52GP101_L;
    double W52GP101_diff;
    int    W52GP101_fel;
    double W52GP101_filt;
    double W52GP101_konst;
    double W52GP101_offset;
    double W52GT101;
    double W52GT101_R;
    int    W52GT101_fel;
    double W52GT101_filt;
    double W52GT101_korr;
    double W52GT102;
    double W52GT102_R;
    int    W52GT102_fel;
    double W52GT102_filt;
    double W52GT102_korr;
    int    Weekday;
    int    Weekno;
    int    Weekyear;
    int    Year;
    int    (*account)();
    int    (*aifilt)();
    int    (*alarm_active)();
    double    (*aqhand)();
    int    (*battLow)();
    int    (*blockSNPKkeyboard)();
    int    (*bypassSNPKrelay)();
    int    (*calActiveIn)();
    int    (*checkCalendarLevel)();
    int    (*clearCode)();
    int    (*display)();
    int    (*dqhand)();
    double    (*enter)();
    int    (*enter_calendar)();
    int    (*enter_kurva)();
    double    (*exp)();
    double    (*fabs)();
    int    forsta_gangen;
    int    (*getAlarmSNPK)();
    int    (*getRelTime)();
    int    (*getTime)();
    int    (*isTimerInit)();
    int    (*key)();
    double    (*kurva)();
    double    (*kurvan)();
    int    level;
    int    level1;
    int    level2;
    int    level3;
    int    level4;
    int    level5;
    int    level_drift;
    int    level_jour;
    int    level_nu;
    int    noOfAck_A;
    int    noOfAck_B;
    int    noOfAck_C;
    int    noOfAck_D;
    int    noOfNak_A;
    int    noOfNak_B;
    int    noOfNak_C;
    int    noOfNak_D;
    int    nodeUp;
    int    (*optoPower)();
    int    overflow;
    int    overflow_larm;
    int    (*password)();
    double    (*pid)();
    double    (*pow)();
    int    powerup;
    int    (*pt100flt)();
    int    (*pulsmat)();
    int    service;
    int    serviceLed;
    int    (*setAlarmSNPK)();
    int    (*setCode)();
    int    (*setSafeCode)();
    int    (*setTime)();
    int    (*set_time)();
    int    (*sleep)();
    double    (*sqrt)();
    int    (*statman)();
    int    (*timerCancel)();
    int    (*timerInit)();
    int    (*timerReady)();
    int    (*tsleep)();
    int    (*tvpump)();
    struct _remote _remoterVar_001;
    double utetemp;
    int    (*valvhand)();
    int    (*ventpump)();
    int    (*xxxswdctime)();
    char  Aq1_1_lock;
    char  Aq1_2_lock;
    char  Aq1_3_lock;
    char  Aq1_4_lock;
    char  Auto_lock;
    char  Day_lock;
    char  Daycolor_lock;
    char  Dq8_1_lock;
    char  Dq8_2_lock;
    char  Dq8_3_lock;
    char  Dq8_4_lock;
    char  Dq8_5_lock;
    char  Dq8_6_lock;
    char  Dq8_7_lock;
    char  Dq8_8_lock;
    char  E101_lock;
    char  E101_hand_lock;
    char  E101_man_lock;
    char  E101_ut_lock;
    char  E101_ut_konst_lock;
    char  E101_ut_off_lock;
    char  FP1_auto_lock;
    char  FP1_drifttill_lock;
    char  FP1_drifttill_Auto_lock;
    char  FP1_drifttill_hand_lock;
    char  FP1_effekt_lock;
    char  FP1_larmkvitt_lock;
    char  FP1_ned_lock;
    char  FP1_till_lock;
    char  FP1_till_Auto_lock;
    char  FP1_till_hand_lock;
    char  G80GQ101_lock;
    char  G80GQ101_L_lock;
    char  G80GQ101_diff_lock;
    char  G80GQ101_fel_lock;
    char  G80GQ101_filt_lock;
    char  G80GQ101_konst_lock;
    char  G80GQ101_offset_lock;
    char  G80GQ102_lock;
    char  G80GQ102_L_lock;
    char  G80GQ102_diff_lock;
    char  G80GQ102_fel_lock;
    char  G80GQ102_filt_lock;
    char  G80GQ102_konst_lock;
    char  G80GQ102_offset_lock;
    char  G80GQ103_lock;
    char  G80GQ103_L_lock;
    char  G80GQ103_diff_lock;
    char  G80GQ103_fel_lock;
    char  G80GQ103_filt_lock;
    char  G80GQ103_konst_lock;
    char  G80GQ103_offset_lock;
    char  Hour_lock;
    char  Kort_7_lock;
    char  Manover_kraft_lock;
    char  Manover_kraft_R_lock;
    char  Miljolarm_lock;
    char  Minute_lock;
    char  Month_lock;
    char  STAT_fore_lock;
    char  STAT_nytid_lock;
    char  STAT_oldmonth_lock;
    char  Second_lock;
    char  Sleep_lock;
    char  W36AV101_auto_lock;
    char  W36AV101_closed_lock;
    char  W36AV101_delay_lock;
    char  W36AV101_hand_lock;
    char  W36AV101_open_lock;
    char  W36AV101_oppna_lock;
    char  W36AV101_oppna_larm_lock;
    char  W36AV101_sakr_lock;
    char  W36AV101_stang_lock;
    char  W36AV101_stang_larm_lock;
    char  W36AV101_styr_lock;
    char  W36GE101_lock;
    char  W36GE101_L_lock;
    char  W36GE101_diff_lock;
    char  W36GE101_fel_lock;
    char  W36GE101_filt_lock;
    char  W36GE101_konst_lock;
    char  W36GE101_offset_lock;
    char  W36GF101_lock;
    char  W36GF101_L_lock;
    char  W36GF101_diff_lock;
    char  W36GF101_fel_lock;
    char  W36GF101_filt_lock;
    char  W36GF101_konst_lock;
    char  W36GF101_offset_lock;
    char  W36GT101A_lock;
    char  W36GT101A_L_lock;
    char  W36GT101A_diff_lock;
    char  W36GT101A_fel_lock;
    char  W36GT101A_filt_lock;
    char  W36GT101A_konst_lock;
    char  W36GT101A_offset_lock;
    char  W36GT101B_lock;
    char  W36GT101B_L_lock;
    char  W36GT101B_diff_lock;
    char  W36GT101B_fel_lock;
    char  W36GT101B_filt_lock;
    char  W36GT101B_konst_lock;
    char  W36GT101B_offset_lock;
    char  W36GW101_effekt_lock;
    char  W36GW101_foreg_lock;
    char  W36GW101_max_lock;
    char  W36GW101_nytid_lock;
    char  W36GW101_pagar_lock;
    char  W36GW101_puls_lock;
    char  W36GW101_pulser_lock;
    char  W36GW101_sek_lock;
    char  W36GW101_skal_lock;
    char  W36GW101_visa_lock;
    char  W51GE101_lock;
    char  W51GE101_L_lock;
    char  W51GE101_diff_lock;
    char  W51GE101_fel_lock;
    char  W51GE101_filt_lock;
    char  W51GE101_konst_lock;
    char  W51GE101_offset_lock;
    char  W51GF101_lock;
    char  W51GF101_L_lock;
    char  W51GF101_diff_lock;
    char  W51GF101_fel_lock;
    char  W51GF101_filt_lock;
    char  W51GF101_konst_lock;
    char  W51GF101_offset_lock;
    char  W51GP103_lock;
    char  W51GP103_L_lock;
    char  W51GP103_diff_lock;
    char  W51GP103_fel_lock;
    char  W51GP103_filt_lock;
    char  W51GP103_konst_lock;
    char  W51GP103_offset_lock;
    char  W51GT101A_lock;
    char  W51GT101A_L_lock;
    char  W51GT101A_diff_lock;
    char  W51GT101A_fel_lock;
    char  W51GT101A_filt_lock;
    char  W51GT101A_konst_lock;
    char  W51GT101A_offset_lock;
    char  W51GT101B_lock;
    char  W51GT101B_L_lock;
    char  W51GT101B_diff_lock;
    char  W51GT101B_fel_lock;
    char  W51GT101B_filt_lock;
    char  W51GT101B_konst_lock;
    char  W51GT101B_offset_lock;
    char  W51GT105_lock;
    char  W51GT105_R_lock;
    char  W51GT105_fel_lock;
    char  W51GT105_filt_lock;
    char  W51GT105_korr_lock;
    char  W51GT108_lock;
    char  W51GT108_R_lock;
    char  W51GT108_fel_lock;
    char  W51GT108_filt_lock;
    char  W51GT108_korr_lock;
    char  W51GT109_lock;
    char  W51GT109_R_lock;
    char  W51GT109_fel_lock;
    char  W51GT109_filt_lock;
    char  W51GT109_korr_lock;
    char  W51GW101_effekt_lock;
    char  W51GW101_foreg_lock;
    char  W51GW101_max_lock;
    char  W51GW101_nytid_lock;
    char  W51GW101_pagar_lock;
    char  W51GW101_puls_lock;
    char  W51GW101_pulser_lock;
    char  W51GW101_sek_lock;
    char  W51GW101_skal_lock;
    char  W51GW101_visa_lock;
    char  W51SV101_lock;
    char  W51SV101_L_lock;
    char  W51SV101_auto_lock;
    char  W51SV101_hand_lock;
    char  W51SV101_in_lock;
    char  W51SV101_in_diff_lock;
    char  W51SV101_in_fel_lock;
    char  W51SV101_in_filt_lock;
    char  W51SV101_in_konst_lock;
    char  W51SV101_in_offset_lock;
    char  W51SV101_inkurv_lock;
    char  W51SV101_man_lock;
    char  W51SV101_sakr_lock;
    char  W51SV101_ut_lock;
    char  W51SV101_ut_off_lock;
    char  W51SV101_utkurv_lock;
    char  W52GP101_lock;
    char  W52GP101_L_lock;
    char  W52GP101_diff_lock;
    char  W52GP101_fel_lock;
    char  W52GP101_filt_lock;
    char  W52GP101_konst_lock;
    char  W52GP101_offset_lock;
    char  W52GT101_lock;
    char  W52GT101_R_lock;
    char  W52GT101_fel_lock;
    char  W52GT101_filt_lock;
    char  W52GT101_korr_lock;
    char  W52GT102_lock;
    char  W52GT102_R_lock;
    char  W52GT102_fel_lock;
    char  W52GT102_filt_lock;
    char  W52GT102_korr_lock;
    char  Weekday_lock;
    char  Weekno_lock;
    char  Weekyear_lock;
    char  Year_lock;
    char  account_lock;
    char  aifilt_lock;
    char  alarm_active_lock;
    char  aqhand_lock;
    char  battLow_lock;
    char  blockSNPKkeyboard_lock;
    char  bypassSNPKrelay_lock;
    char  calActiveIn_lock;
    char  checkCalendarLevel_lock;
    char  clearCode_lock;
    char  display_lock;
    char  dqhand_lock;
    char  enter_lock;
    char  enter_calendar_lock;
    char  enter_kurva_lock;
    char  exp_lock;
    char  fabs_lock;
    char  forsta_gangen_lock;
    char  getAlarmSNPK_lock;
    char  getRelTime_lock;
    char  getTime_lock;
    char  isTimerInit_lock;
    char  key_lock;
    char  kurva_lock;
    char  kurvan_lock;
    char  level_lock;
    char  level1_lock;
    char  level2_lock;
    char  level3_lock;
    char  level4_lock;
    char  level5_lock;
    char  level_drift_lock;
    char  level_jour_lock;
    char  level_nu_lock;
    char  noOfAck_A_lock;
    char  noOfAck_B_lock;
    char  noOfAck_C_lock;
    char  noOfAck_D_lock;
    char  noOfNak_A_lock;
    char  noOfNak_B_lock;
    char  noOfNak_C_lock;
    char  noOfNak_D_lock;
    char  nodeUp_lock;
    char  optoPower_lock;
    char  overflow_lock;
    char  overflow_larm_lock;
    char  password_lock;
    char  pid_lock;
    char  pow_lock;
    char  powerup_lock;
    char  pt100flt_lock;
    char  pulsmat_lock;
    char  service_lock;
    char  serviceLed_lock;
    char  setAlarmSNPK_lock;
    char  setCode_lock;
    char  setSafeCode_lock;
    char  setTime_lock;
    char  set_time_lock;
    char  sleep_lock;
    char  sqrt_lock;
    char  statman_lock;
    char  timerCancel_lock;
    char  timerInit_lock;
    char  timerReady_lock;
    char  tsleep_lock;
    char  tvpump_lock;
    char  utetemp_lock;
    char  valvhand_lock;
    char  ventpump_lock;
    char  xxxswdctime_lock;
} *dm;    /* total size of struct = 1993 */

#define utetemp_OFFSET 278
#define NAMEOFDATAMODULE "VARS"
#define NAMEOFDATAMODULE2 "VAR2"
#define DATAMODULE_ADDRESS 0x20000
extern int account(); 
extern int aifilt(); 
extern int alarm_active(); 
extern double aqhand(); 
extern int battLow(); 
extern int blockSNPKkeyboard(); 
extern int bypassSNPKrelay(); 
extern int calActiveIn(); 
extern int checkCalendarLevel(); 
extern int clearCode(); 
extern int display(); 
extern int dqhand(); 
extern double enter(); 
extern int enter_calendar(); 
extern int enter_kurva(); 
extern double exp(); 
extern double fabs(); 
extern int getAlarmSNPK(); 
extern int getRelTime(); 
extern int getTime(); 
extern int isTimerInit(); 
extern int key(); 
extern double kurva(); 
extern double kurvan(); 
extern int optoPower(); 
extern int password(); 
extern double pid(); 
extern double pow(); 
extern int pt100flt(); 
extern int pulsmat(); 
extern int setAlarmSNPK(); 
extern int setCode(); 
extern int setSafeCode(); 
extern int setTime(); 
extern int set_time(); 
extern int sleep(); 
extern double sqrt(); 
extern int statman(); 
extern int timerCancel(); 
extern int timerInit(); 
extern int timerReady(); 
extern int tsleep(); 
extern int tvpump(); 
extern int valvhand(); 
extern int ventpump(); 
extern int xxxswdctime(); 
extern int account(); 
extern int aifilt(); 
extern int alarm_active(); 
extern double aqhand(); 
extern int battLow(); 
extern int blockSNPKkeyboard(); 
extern int bypassSNPKrelay(); 
extern int calActiveIn(); 
extern int checkCalendarLevel(); 
extern int clearCode(); 
extern int display(); 
extern int dqhand(); 
extern double enter(); 
extern int enter_calendar(); 
extern int enter_kurva(); 
extern double exp(); 
extern double fabs(); 
extern int getAlarmSNPK(); 
extern int getRelTime(); 
extern int getTime(); 
extern int isTimerInit(); 
extern int key(); 
extern double kurva(); 
extern double kurvan(); 
extern int optoPower(); 
extern int password(); 
extern double pid(); 
extern double pow(); 
extern int pt100flt(); 
extern int pulsmat(); 
extern int setAlarmSNPK(); 
extern int setCode(); 
extern int setSafeCode(); 
extern int setTime(); 
extern int set_time(); 
extern int sleep(); 
extern double sqrt(); 
extern int statman(); 
extern int timerCancel(); 
extern int timerInit(); 
extern int timerReady(); 
extern int tsleep(); 
extern int tvpump(); 
extern int valvhand(); 
extern int ventpump(); 
extern int xxxswdctime(); 
#define NO_OF_ALARMS 27
#define NO_OF_TIMERS 2
struct _lockModule {
  int noOfAlarms;
  int alarmLock[NO_OF_ALARMS];
  int noOfTimers;
  int timerLock[NO_OF_TIMERS];
} *lock; /* total size of struct = 124 */
